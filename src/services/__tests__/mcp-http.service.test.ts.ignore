import { it, describe, expect, beforeEach, afterEach, vi } from 'vitest';
import { mcpHttpService } from '../mcp-http.service.js';

// Mock process.stderr.write
const mockStderrWrite = vi.spyOn(process.stderr, 'write').mockImplementation(() => true);

describe('MCPHttpService', () => {
  beforeEach(() => {
    mockStderrWrite.mockClear();
  });
  
  afterEach(() => {
    vi.restoreAllMocks();
  });
  
  it('should log appropriate message when starting', async () => {
    await mcpHttpService.start();
    expect(mockStderrWrite).toHaveBeenCalledWith(
      expect.stringContaining("MCP HTTP Service is not implemented")
    );
  });
  
  it('should log appropriate message when stopping', async () => {
    // Clear previous calls
    mockStderrWrite.mockClear();
    
    // Call stop
    await mcpHttpService.stop();
    
    // Check the message was logged
    expect(mockStderrWrite).toHaveBeenCalledWith(
      expect.stringContaining("MCP HTTP Service is not implemented")
    );
  });
  
  it('should have null mcpServer property', () => {
    // Access private property for testing
    // We need to use any to access private property
    expect((mcpHttpService as any).mcpServer).toBeNull();
  });
});